<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MicroPos.Core</name>
    </assembly>
    <members>
        <member name="T:MicroPos.Core.Authorization.Card">
            <summary>
            Public information about the card.
            </summary>
        </member>
        <member name="T:MicroPos.Core.Authorization.ICard">
            <summary>
            Public information about the card.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICard.BrandId">
            <summary>
            Brand ID.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICard.BrandName">
            <summary>
            Card brand name.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICard.CardholderName">
            <summary>
            Cardholder name printed on the card.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICard.ExpirationDate">
            <summary>
            Card expiration date.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICard.MaskedPrimaryAccountNumber">
            <summary>
            Masked primary account number (number printed on the card).
            The mask consists in hide middle characters. 
            Example:
            Original PAN: 1234432156788765
            Masked PAN: 123443******8765
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICard.Type">
            <summary>
            Card type.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICard.ApplicationId">
            <summary>
            Card application ID, also known as AID.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICard.ApplicationCryptogram">
            <summary>
            Card application cryptogram, also known as ARQC.
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.Card.rawCard">
            <summary>
            "Unmapped" card.
            </summary>
        </member>
        <member name="M:MicroPos.Core.Authorization.Card.#ctor(Pinpad.Sdk.Model.CardEntry)">
            <summary>
            Private constructor, to set de "unmapped" card.
            </summary>
            <param name="rawCard"></param>
        </member>
        <member name="M:MicroPos.Core.Authorization.Card.Create(Pinpad.Sdk.Model.CardEntry)">
            <summary>
            Method to create this classe' instance.
            </summary>
            <param name="rawCard"></param>
            <returns></returns>
        </member>
        <member name="P:MicroPos.Core.Authorization.Card.BrandId">
            <summary>
            Brand ID.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.Card.BrandName">
            <summary>
            Card brand name.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.Card.CardholderName">
            <summary>
            Cardholder name printed on the card.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.Card.ExpirationDate">
            <summary>
            Card expiration date.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.Card.MaskedPrimaryAccountNumber">
            <summary>
            Masked primary account number (number printed on the card).
            The mask consists in hide middle characters. 
            Example:
            Original PAN: 1234432156788765
            Masked PAN: 123443******8765
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.Card.Type">
            <summary>
            Card type.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.Card.ApplicationId">
            <summary>
            Card application ID, also known as AID.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.Card.ApplicationCryptogram">
            <summary>
            Card application cryptogram, also known as ARQC.
            </summary>
        </member>
        <member name="T:MicroPos.Core.CardPaymentAuthorizer">
            <summary>
            Responsible for authorizing transactions. Should be initialized fo each pinpad connected.
            </summary>
        </member>
        <member name="T:MicroPos.Core.Authorization.ICardPaymentAuthorizer">
            <summary>
            Responsible for authorizing transactions. Should be initialized fo each pinpad connected.
            </summary>
        </member>
        <member name="M:MicroPos.Core.Authorization.ICardPaymentAuthorizer.Authorize(MicroPos.Core.Authorization.ITransactionEntry,MicroPos.Core.Authorization.ICard@)">
            <summary>
            Perform an authorization.
            </summary>
            <param name="transaction">Transaction information.</param>
            <param name="cardInfo">Information about the card.</param>
            <returns>Transaction information, if operation has succeed. Otherwise, returns rejection information.</returns>
        </member>
        <member name="M:MicroPos.Core.Authorization.ICardPaymentAuthorizer.GetSecurePan(System.String@)">
            <summary>
            Used to get card's Primary Account Number from EMV or Magnetic Stripe.
            </summary>
            <param name="pan">Primary Account Number read from the card.</param>
            <returns>Operation status.</returns>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICardPaymentAuthorizer.PinpadController">
            <summary>
            Responsible for pinpad communication. All data sent to pinpad is made through this member.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICardPaymentAuthorizer.AuthorizationProvider">
            <summary>
            Authorization provider URI.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICardPaymentAuthorizer.SaleAffiliationKey">
            <summary>
            Sale Affiliation Key - merchant affiliation code on acquirer.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICardPaymentAuthorizer.AuthorizationStatus">
            <summary>
            If SDK user tried to use a different authorization flow from the given one, then this member will indicate an error.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICardPaymentAuthorizer.AuthorizationMessage">
            <summary>
            Message with response reasno from Stone authorization host.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICardPaymentAuthorizer.PinpadMessages">
            <summary>
            16 character label to be shown on pinpad screen at the end of a transaction.
            Only the first 16 characters are shown.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ICardPaymentAuthorizer.OnStateChanged">
            <summary>
            Contains what should be done if the event is triggered.
            </summary>
        </member>
        <member name="F:MicroPos.Core.CardPaymentAuthorizer._authorizationStatus">
            <summary>
            If SDK user tried to use a different authorization flow from the given one, then this member will indicate an error.
            </summary>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.AuthorizationStatusChanged(MicroPos.Core.Authorization.AuthorizationStatus,System.String)">
            <summary> 
            Calls the event handler.
            </summary>
            <param name="status">Transaction status.</param>
            <param name="message">A message according to the transaction status.</param>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.#ctor(System.String,System.String,System.String,System.String,MicroPos.Core.DisplayableMessages)">
            <summary>
            Initializes mandatory data to be able to perform authorization operations.
            </summary>
            <param name="sak">Sale Affiliation Key.</param>
            <param name="authorizationUri">Authorization provider URI.</param>
            <param name="tableDownloadUri">Terminal Management Service URI.</param>
            <param name="pinpadPortName">Pinpad port name (example "COM1").</param>
            <param name="pinpadMessages">Messages to be displayed on pinpad screen while transacting. If null, default values are set.</param>
            <exception cref="T:System.ArgumentNullException">If a mandatory parameter is null.</exception>
            <exception cref="T:System.ArgumentException">If a mandatory parameter contains invalid value.</exception>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.#ctor(System.String,Poi.Sdk.AcquirerServiceClient,System.String,System.String,MicroPos.Core.DisplayableMessages)">
            <summary>
            Initializes mandatory data to be able to perform authorization operations.
            </summary>
            <param name="sak">Sale Affiliation Key.</param>
            <param name="acquirerServiceClient">Responsible for communicate with Stone authorization host.</param>
            <param name="tableDownloadUri">Terminal Management Service URI.</param>
            <param name="pinpadPortName">Pinpad port name (example "COM1").</param>
            <param name="pinpadMessages">Messages to be displayed on pinpad screen while transacting. If null, default values are set.</param>
            <exception cref="T:System.ArgumentNullException">If a mandatory parameter is null.</exception>
            <exception cref="T:System.ArgumentException">If a mandatory parameter contains invalid value.</exception>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.Authorize(MicroPos.Core.Authorization.ITransactionEntry,MicroPos.Core.Authorization.ICard@)">
            <summary>
            Perform an authorization.
            </summary>
            <param name="transaction">Transaction information.</param>
            <param name="cardInfo">Information about the card.</param>
            <returns>Transaction information, if operation has succeed. Otherwise, returns rejection information.</returns>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.GetSecurePan(System.String@)">
            <summary>
            Used to get card's Primary Account Number from EMV or Magnetic Stripe.
            </summary>
            <param name="pan">Primary Account Number read from the card.</param>
            <returns>Operation status.</returns>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.PerformAuthorization(MicroPos.Core.Authorization.ITransactionEntry,MicroPos.Core.Authorization.ICard@)">
            <summary>
            Performs a transaction.
            </summary>
            <param name="transaction">Transaction information.</param>
            <param name="cardInfo">Information about the card.</param>
            <returns>Transaction information, if operation has succeed. Otherwise, returns rejection information.</returns>
            <exception cref="T:System.ArgumentNullException">If a mandatory parameter is null.</exception>
            <exception cref="T:System.ArgumentException">If a mandatory parameter contains invalid value.</exception>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.ReadCardHandler(Pinpad.Sdk.Model.CardEntry@,MicroPos.Core.Authorization.TransactionEntry)">
            <summary>
            Prompts for card insertion.
            Reads card information and saves it in class' properties.
            </summary>
            <param name="cardInfo">Card read information.</param>
            <param name="transaction">Transaction information.</param>
            <returns>Operation status.</returns>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.ReadCard(Pinpad.Sdk.Model.CardEntry@,MicroPos.Core.Authorization.TransactionEntry)">
            <summary>
            Prompts for card insertion.
            Reads card information and saves it in class' properties.
            </summary>
            <param name="cardInfo">Card read information.</param>
            <param name="transaction">Transaction information.</param>
            <returns>Card reading status.</returns>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.ReadPasswordHandler(Pinpad.Sdk.Model.Pin@,Pinpad.Sdk.Model.CardEntry,System.Decimal)">
            <summary>
            If needed, read cardholder password and saves it in class' properties.
            </summary>
            <param name="pinInfo">Card security information read.</param>
            <param name="cardInfo">Card information from which security are extracted.</param>
            <param name="amount">Transaction amount.</param>
            <returns>Password reading status.</returns>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.ReadPassword(Pinpad.Sdk.Model.Pin@,Pinpad.Sdk.Model.CardEntry,System.Decimal)">
            <summary>
            If needed, read cardholder password and saves it in class' properties.
            </summary>
            <param name="pinInfo">Card security information read.</param>
            <param name="cardInfo">Card information.</param>
            <param name="amount">Transaction amount.</param>
            <returns>Password reading status.</returns>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.Send(Poi.Sdk.Authorization.AuthorizationRequest)">
            <summary>
            Sends an authorization request.
            This method should be called following a given authorization flow. That is, after all authorization mandatory information are collected.
            </summary>
            <param name="request">Request to be sent.</param>
            <returns>Response from server.</returns>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.HandlePoiResponse(Poi.Sdk.PoiResponseBase)">
            <summary>
            Get's response data and generates information about the autohrization process, including detailing response reason.
            </summary>
            <param name="response">Raw POI response from Stone authorization host.</param>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.PromptForCardRemoval(System.String)">
            <summary>
            Prompts for cardholder to remove the card.
            </summary>
            <param name="message">This message is shown alternately with "RETIRE O CARTÃO". This message is also kept on the screen after the transaction process is closed.</param>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.UpdateTable(System.Boolean)">
            <summary>
            Update pinpad AID and CAPK tables.
            </summary>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.FinishAuthorization">
            <summary>
            Clear transaction data. After that, user can perform another transaction.
            </summary>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.CreateAuthorizationRequest(System.String,Pinpad.Sdk.Model.CardEntry,MicroPos.Core.Authorization.TransactionEntry,Pinpad.Sdk.Model.Pin)">
            <summary>
            Receives authorization information and creates an authorization request.
            </summary>
            <param name="sak">Sale Affiliation Key.</param>
            <param name="cardType">Type of the card inserted/swiped./</param>
            <param name="card">Card information.</param>
            <param name="transaction">Transaction information.</param>
            <param name="pin">PIN block information.</param>
            <returns>An authorization request ready to be sent.</returns>
        </member>
        <member name="M:MicroPos.Core.CardPaymentAuthorizer.Validate(Pinpad.Sdk.PinpadController,System.String,Poi.Sdk.AcquirerServiceClient)">
            <summary>
            Constructor parameter validation.
            </summary>
            <param name="pinpadController">Pinpad controller. Pinpad communication is made through this member.</param>
            <param name="sak">Sale Affiliation Key.</param>
            <param name="acquirerServiceClient">Authorization provider URI.</param>
            <exception cref="T:System.ArgumentNullException">If a mandatory parameter is null.</exception>
            <exception cref="T:System.ArgumentException">If a mandatory parameter contains invalid value.</exception>
        </member>
        <member name="P:MicroPos.Core.CardPaymentAuthorizer.PinpadController">
            <summary>
            Responsible for pinpad communication. All data sent to pinpad is made through this member.
            </summary>
        </member>
        <member name="P:MicroPos.Core.CardPaymentAuthorizer.TableController">
            <summary>
            Responsible for charging pinpads tables.
            </summary>
        </member>
        <member name="P:MicroPos.Core.CardPaymentAuthorizer.HasInternetConnection">
            <summary>
            Returns whether the terminal has internet connection or not.
            </summary>
        </member>
        <member name="P:MicroPos.Core.CardPaymentAuthorizer.AuthorizationProvider">
            <summary>
            Authorization provider URI.
            </summary>
        </member>
        <member name="P:MicroPos.Core.CardPaymentAuthorizer.SaleAffiliationKey">
            <summary>
            Sale Affiliation Key - merchant affiliation code on acquirer.
            </summary>
        </member>
        <member name="P:MicroPos.Core.CardPaymentAuthorizer.PinpadMessages">
            <summary>
            16 character label to be shown on pinpad screen at the end of a transaction.
            Only the first 16 characters are shown.
            </summary>
        </member>
        <member name="P:MicroPos.Core.CardPaymentAuthorizer.AuthorizationStatus">
            <summary>
            If SDK user tried to use a different authorization flow from the given one, then this member will indicate an error.
            </summary>
        </member>
        <member name="P:MicroPos.Core.CardPaymentAuthorizer.AuthorizationMessage">
            <summary>
            Message with response reasno from Stone authorization host.
            </summary>
        </member>
        <member name="P:MicroPos.Core.CardPaymentAuthorizer.OnStateChanged">
            <summary>
            Contains what should be done if the event is triggered.
            </summary>
        </member>
        <member name="T:MicroPos.Core.Authorization.ITransactionEntry">
            <summary>
            Content (about a transaction) to initialize an authorization process.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ITransactionEntry.Type">
            <summary>
            Type os the transaction (credit, debit).
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ITransactionEntry.Installment">
            <summary>
            Information about installments, if a credit transaction.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ITransactionEntry.Amount">
            <summary>
            Transaction amount.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ITransactionEntry.CaptureTransaction">
            <summary>
            If the transaction should be completed after authorized.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.ITransactionEntry.InitiatorTransactionKey">
            <summary>
            Identifier setted by the user.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:MicroPos.Core.Authorization.Mapper.CardMapper" -->
        <member name="M:MicroPos.Core.Authorization.Mapper.CardMapper.MapCardEntry(Pinpad.Sdk.Model.CardEntry,Pinpad.Sdk.Model.Pin)">
            <summary>
            Maps intances of CardEntry and Pin, and returns the corresponding instance of Card.
            </summary>
            <param name="pinpadCard">Card information to be mapped.</param>
            <param name="pin">Pin information to be mapped.</param>
            <returns>Mapped instance of card.</returns>
            <exception cref="T:System.ArgumentNullException">If some mandatory argument is null.</exception>
        </member>
        <member name="M:MicroPos.Core.Authorization.Mapper.CardMapper.MapCard(Poi.Sdk.Authorization.CardSecurityInformation)">
            <summary>
            Maps intances of Card into the corresponding instance of CardEntry.
            </summary>
            <param name="card">Card information to be mapped.</param>
            <returns>Mapped instance of card.</returns>
            <exception cref="T:System.ArgumentNullException">If some mandatory argument is null.</exception>
        </member>
        <member name="M:MicroPos.Core.Authorization.Mapper.CardMapper.Validate(Pinpad.Sdk.Model.CardEntry,Pinpad.Sdk.Model.Pin)">
            <summary>
            Mapping parameter validation.
            </summary>
            <param name="pinpadCard">Card information to be mapped.</param>
            <param name="pin">Pin information to be mapped.</param>
            <exception cref="T:System.ArgumentNullException">If some mandatory argument is null.</exception>
        </member>
        <member name="M:MicroPos.Core.Authorization.Mapper.CardMapper.Validate(Poi.Sdk.Authorization.CardSecurityInformation)">
            <summary>
            Mapping parameter validation.
            </summary>
            <param name="card">&gt;Card information to be mapped.</param>
            <exception cref="T:System.ArgumentNullException">If some mandatory argument is null.</exception>
        </member>
        <member name="T:MicroPos.Core.Authorization.Installment">
            <summary>
            Represents installment properties.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.Installment.Type">
            <summary>
            Type of installment. Number can depend on it.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.Installment.Number">
            <summary>
            Total amount of installment(s).
            </summary>
        </member>
        <member name="T:MicroPos.Core.Authorization.AuthorizationStatusChangeEventArgs">
            <summary>
            Transaction status changing event.
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatusChangeEventArgs.AuthorizationStatus">
            <summary>
            Triggers an event when the authorization status is changed.
            </summary>
        </member>
        <member name="T:MicroPos.Core.Authorization.TransactionEntry">
            <summary>
            Content (about a transaction) to initialize an authorization process.
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.TransactionEntry.ITK_LIMIT_LENGTH">
            <summary>
            Initiator Transaction Key length.
            </summary>
        </member>
        <member name="M:MicroPos.Core.Authorization.TransactionEntry.#ctor(Pinpad.Sdk.Model.TypeCode.TransactionType,System.Decimal,MicroPos.Core.Authorization.Installment,System.String,System.Boolean)">
            <summary>
            Setter constructor. Validates information, if needed.
            </summary>
            <param name="type">Type os the transaction (credit, debit).</param>
            <param name="amount">Transaction amount.</param>
            <param name="installment">Information about installments, if a credit transaction.</param>
            <param name="itk">Identifier setted by the user.</param>
            <param name="captureTransaction">If the transaction should be completed after authorized.</param>
            <exception cref="T:System.ArgumentException">If an argument has invalid value or does not follow a specific business rule.</exception>
        </member>
        <member name="M:MicroPos.Core.Authorization.TransactionEntry.Validate(Pinpad.Sdk.Model.TypeCode.TransactionType,System.Decimal,MicroPos.Core.Authorization.Installment,System.String,System.Boolean)">
            <summary>
            Validates construction parameters that need to be validated.
            </summary>
            <param name="type">Type os the transaction (credit, debit).</param>
            <param name="amount">Transaction amount.</param>
            <param name="installment">Information about installments, if a credit transaction.</param>
            <param name="itk">Identifier setted by the user.</param>
            <param name="captureTransaction">If the transaction should be completed after authorized.</param>
            <exception cref="T:System.ArgumentException">If an argument has invalid value or does not follow a specific business rule.</exception>
        </member>
        <member name="P:MicroPos.Core.Authorization.TransactionEntry.Type">
            <summary>
            Type os the transaction (credit, debit).
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.TransactionEntry.Installment">
            <summary>
            Information about installments, if a credit transaction.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.TransactionEntry.Amount">
            <summary>
            Transaction amount.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.TransactionEntry.CaptureTransaction">
            <summary>
            If the transaction should be completed after authorized.
            </summary>
        </member>
        <member name="P:MicroPos.Core.Authorization.TransactionEntry.InitiatorTransactionKey">
            <summary>
            Identifier setted by the user.
            </summary>
        </member>
        <member name="T:MicroPos.Core.DisplayableMessages">
            <summary>
            Represents messages to be displayed on pinpad screen.
            </summary>
        </member>
        <member name="F:MicroPos.Core.DisplayableMessages.DEFAULT_INITIALIZATION_MESSAGE">
            <summary>
            Default message to be displayed on pinpad screen while initializing the pinpad.
            </summary>
        </member>
        <member name="F:MicroPos.Core.DisplayableMessages.DEFAULT_APPROVED_MESSAGE">
            <summary>
            Default message to be displayed on pinpad screen when a transaction is approved.
            </summary>
        </member>
        <member name="F:MicroPos.Core.DisplayableMessages.DEFAULT_DECLINED_MESSAGE">
            <summary>
            Default message to be displayed on pinpad screen when a transaction is declined.
            </summary>
        </member>
        <member name="F:MicroPos.Core.DisplayableMessages.DEFAULT_MAIN_LABEL">
            <summary>
            Default message to be displayed on pinpad screen while pinpad is not transacting.
            </summary>
        </member>
        <member name="F:MicroPos.Core.DisplayableMessages.DEFAULT_PROCESSING_MESSAGE">
            <summary>
            Default message to be displayed on pinpad screen while processing the transaction.
            </summary>
        </member>
        <member name="M:MicroPos.Core.DisplayableMessages.#ctor">
            <summary>
            Parameterless constructor, that sets its properties with default values.
            </summary>
        </member>
        <member name="P:MicroPos.Core.DisplayableMessages.InitializationMessage">
            <summary>
            Message to be displayed on pinpad screen while initializing the pinpad.
            </summary>
        </member>
        <member name="P:MicroPos.Core.DisplayableMessages.ApprovedMessage">
            <summary>
            Message to be displayed on pinpad screen when a transaction is approved.
            </summary>
        </member>
        <member name="P:MicroPos.Core.DisplayableMessages.DeclinedMessage">
            <summary>
            Message to be displayed on pinpad screen when a transaction is declined.
            </summary>
        </member>
        <member name="P:MicroPos.Core.DisplayableMessages.MainLabel">
            <summary>
            Message to be displayed on pinpad screen while pinpad is not transacting.
            </summary>
        </member>
        <member name="P:MicroPos.Core.DisplayableMessages.ProcessingMessage">
            <summary>
            Message to be displayed on pinpad screen while processing the transaction.
            </summary>
        </member>
        <member name="M:MicroPos.Core.Bootstrapper.PinpadControllerInitializer(System.String)">
            <summary>
            Initializes pinpad controller, which will send commands and instructions to the device.
            </summary>
            <param name="portName">Port name in which the pinpad is connection (or should be).</param>
            <returns>A pinpad controller.</returns>
        </member>
        <member name="T:MicroPos.Core.Table.Mapper.AidMapper">
            <summary>
            Maps Aid instances from a sdk to another.
            USED INTERNALY ONLY.
            </summary>
        </member>
        <member name="M:MicroPos.Core.Table.Mapper.AidMapper.MapToPinpadAid(Tms.Sdk.Download.Entry.TmsAid)">
            <summary>
            Maps Aid on Tms.Sdk to Aid on Pinpad.Sdk.
            </summary>
            <param name="tmsAid">Tms.Sdk Aid.</param>
            <returns>Pinpad.Sdk Aid.</returns>
            <exception cref="T:System.ArgumentNullException">If null parameter received.</exception>
        </member>
        <member name="M:MicroPos.Core.Table.Mapper.AidMapper.MapToTmsAid(Pinpad.Sdk.Model.PinpadAid)">
            <summary>
            Maps Aid on Pinpad.Sdk to Aid on Tms.Sdk.
            </summary>
            <param name="pinpadAid">Pinpad.Sdk Aid.</param>
            <returns>Tms.Sdk Aid.</returns>
            <exception cref="T:System.ArgumentNullException">If null parameter received.</exception>
        </member>
        <member name="M:MicroPos.Core.Table.Mapper.AidMapper.MapTmsContactlessMode(Tms.Sdk.Model.TypeCode.TmsContactlessMode)">
            <summary>
            Maps ContactlessMode from Tms.Sdk to ContactlessMode on Pinpad.Sdk.
            </summary>
            <param name="mode">Tms.Sdk ContactlessMode.</param>
            <returns>Pinpad.Sdk ContactlessMode.</returns>
        </member>
        <member name="M:MicroPos.Core.Table.Mapper.AidMapper.MapPinpadContactlessMode(Pinpad.Sdk.Model.TypeCode.PinpadContactlessMode)">
            <summary>
            Maps ContactlessMode from Pinpad.Sdk to ContactlessMode on Tms.Sdk.
            </summary>
            <param name="mode">Pinpad.Sdk ContactlessMode.</param>
            <returns>Tms.Sdk ContactlessMode.</returns>
        </member>
        <member name="T:MicroPos.Core.Table.Mapper.CapkMapper">
            <summary>
            Maps Capk instances from a sdk to another.
            USED INTERNALY ONLY.
            </summary>
        </member>
        <member name="M:MicroPos.Core.Table.Mapper.CapkMapper.MapTmsCapk(Tms.Sdk.Download.Entry.TmsCapk)">
            <summary>
            Maps Capk on Tms.Sdk to Capk on Pinpad.Sdk.
            </summary>
            <param name="tmsCapk">Tms.Sdk Capk.</param>
            <returns>Pinpad.Sdk Capk.</returns>
            <exception cref="T:System.ArgumentNullException">If null parameter received.</exception>
        </member>
        <member name="M:MicroPos.Core.Table.Mapper.CapkMapper.MapPinpadCapk(Pinpad.Sdk.Model.PinpadCapk)">
            <summary>
            Maps Capk on Pinpad.Sdk to Capk on Tms.Sdk.
            </summary>
            <param name="pinpadCapk">Pinpad.Sdk Capk.</param>
            <returns>Tms.Sdk Capk.</returns>
            <exception cref="T:System.ArgumentNullException">If null parameter received.</exception>
        </member>
        <member name="T:MicroPos.Core.TableController">
            <summary>
            Responsible for update pinpad tables.
            </summary>
        </member>
        <member name="M:MicroPos.Core.TableController.#ctor(Pinpad.Sdk.Connection.BasePinpadConnection,System.String)">
            <summary>
            Builds the class, validating parameters received and filling mandatory properties to pinpad communication.
            </summary>
            <param name="connection">Pinpad communication ready to be used.</param>
            <param name="uri">Terminal Management Service (TMS) URI. Defines where pinpad tables are downloaded.</param>
        </member>
        <member name="M:MicroPos.Core.TableController.Charge(System.Boolean,System.String)">
            <summary>
            Load all tables updates by the server.
            </summary>
            <param name="saleAffiliationKey">Terminal Sale Affiliation Key (SAK).</param>
            <returns>Response status, defining if something went wrong.</returns>
        </member>
        <member name="M:MicroPos.Core.TableController.SetupRequest(System.String)">
            <summary>
            Set up a download request.
            </summary>
            <param name="saleAffiliationKey">Terminal Sale Affiliation Key (SAK).</param>
            <returns>DownloadRequest ready to be send.</returns>
        </member>
        <member name="M:MicroPos.Core.TableController.SendRequest(Tms.Sdk.RequestBase)">
            <summary>
            Send the request to the host and returns corresponding response.
            </summary>
            <param name="request">DownloadRequest ready to be send.</param>
            <returns>Response corresponding on the request received as parameter. Could be a DownloadResponse or Rejection.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MicroPos.Core.TableController.InjectTables(System.Boolean,System.Collections.ObjectModel.Collection{Tms.Sdk.Download.Report.DownloadReport})" -->
        <member name="M:MicroPos.Core.TableController.InjectCapkTable(Tms.Sdk.Download.Report.CapkReport)">
            <summary>
            Injects CAPK table.
            </summary>
            <param name="capkTable">CAPK table to be injected.</param>
        </member>
        <member name="M:MicroPos.Core.TableController.InjectAidTable(Tms.Sdk.Download.Report.AidReport)">
            <summary>
            Injects AID table.
            </summary>
            <param name="aidTable">AID table to be injected.</param>
        </member>
        <member name="M:MicroPos.Core.TableController.Validate(Pinpad.Sdk.Connection.BasePinpadConnection,System.String)">
            <summary>
            Validates construction parameters.
            </summary>
            <param name="connection">Pinpad communication ready to be used.</param>
            <param name="uri">Terminal Management Service (TMS) URI. Defines where pinpad tables are downloaded.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when some argument is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when some argument has invalid value.</exception>
        </member>
        <member name="M:MicroPos.Core.TableController.Validate(System.String)">
            <summary>
            Validates table loading parameter.
            </summary>
            <param name="saleAffiliationKey">Terminal Sale Affiliation Key (SAK).</param>
            <exception cref="T:System.ArgumentNullException">Thrown when some argument is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when some argument has invalid value.</exception>
        </member>
        <member name="P:MicroPos.Core.TableController.TableHandler">
            <summary>
            Responsible for the actual Pinpad Table. 
            This class (<see cref="T:MicroPos.Core.TableController">Table</see>) encapsulates legacy class <see cref="T:Pinpad.Sdk.EmvTable.PinpadTable">PinpadTable</see>.
            </summary>
        </member>
        <member name="P:MicroPos.Core.TableController.Uri">
            <summary>
            Terminal Management Service (TMS) URI. Defines where pinpad tables are downloaded.
            </summary>
        </member>
        <member name="P:MicroPos.Core.TableController.Exists">
            <summary>
            Returns whether the pinpad has tables or not.
            </summary>
        </member>
        <member name="T:MicroPos.Core.Authorization.AuthorizationStatus">
            <summary>
            Authorization status.
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.Undefined">
            <summary>
            Estado Indefinido
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.InvalidSaleAffiliationKey">
            <summary>
            SaleAffiliationKey inválido
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.InvalidTransaction">
            <summary>
            Transação inválida
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.TransactionCreated">
            <summary>
            Transação criada mas não iniciada
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.Authorizing">
            <summary>
            Autorizando a transação online
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.Approved">
            <summary>
            Transação aprovada
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.NotApproved">
            <summary>
            Transação Negada
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.PartiallyApproved">
            <summary>
            Transação Parcialmente aprovada, consulte TransactionApprovedAmount
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.TechnicalError">
            <summary>
            Erro técnico, transação cancelada
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.UserCancelled">
            <summary>
            Transação cancelada pelo PinPad
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.SystemCancelled">
            <summary>
            Transação cancelada pelo Sistema
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.AwaitingCard">
            <summary>
            Aguardando o cartão ser inserido
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.AwaitingPinCode">
            <summary>
            Aguardando o PIN do cartão ser inserido
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.NetworkError">
            <summary>
            Falha na rede
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.CardReadingError">
            <summary>
            Falha na leitura dos dados do cartão, tente novamente
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.CardReadingFatalError">
            <summary>
            Fatal error occurred on card reading.
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.PinpadGenericError">
            <summary>
            Generic error with PinPad
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.PinpadNotFoundError">
            <summary>
            PinPad não encontrado
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.AwaitingCardRemoval">
            <summary>
            Awaiting the user to remove the card.
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.TableDownloading">
            <summary>
            Downloading CAPK and AID tables from TMS.
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.TransactionFinished">
            <summary>
            Transaction finished.
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.DumbCard">
            <summary>
            Card could not be read. Try swipe the card (even if it have EMV chip).
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.InvalidCard">
            <summary>
            An invalid card was inserted or swiped.
            </summary>
        </member>
        <member name="F:MicroPos.Core.Authorization.AuthorizationStatus.ConnectionError">
            <summary>
            Connection error.
            </summary>
        </member>
    </members>
</doc>
